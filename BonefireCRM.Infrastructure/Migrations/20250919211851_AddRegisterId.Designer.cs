// <auto-generated />
using System;
using BonefireCRM.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BonefireCRM.Infrastructure.Migrations
{
    [DbContext(typeof(CRMContext))]
    [Migration("20250919211851_AddRegisterId")]
    partial class AddRegisterId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AssignedToId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("ContactId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Industry")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("JobTitle")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Deal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AssignedToUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("EstimatedValue")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpectedCloseDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PrimaryContactId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stage")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("PrimaryContactId");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.FollowUpReminder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AssignedToUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CompletedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DealId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReminderDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("ContactId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DealId");

                    b.ToTable("FollowUpReminders");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Interaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DealId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InteractionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LoggedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("DealId");

                    b.HasIndex("LoggedByUserId");

                    b.ToTable("Interactions");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ColorHex")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegisterId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ContactDeal", b =>
                {
                    b.Property<Guid>("AssociatedContactsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DealId")
                        .HasColumnType("TEXT");

                    b.HasKey("AssociatedContactsId", "DealId");

                    b.HasIndex("DealId");

                    b.ToTable("ContactDeal");
                });

            modelBuilder.Entity("ContactTag", b =>
                {
                    b.Property<Guid>("ContactsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("TEXT");

                    b.HasKey("ContactsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ContactTag");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Assignment", b =>
                {
                    b.HasOne("BonefireCRM.Domain.Entities.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BonefireCRM.Domain.Entities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.Navigation("AssignedTo");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Contact", b =>
                {
                    b.HasOne("BonefireCRM.Domain.Entities.Company", "Company")
                        .WithMany("Contacts")
                        .HasForeignKey("CompanyId");

                    b.HasOne("BonefireCRM.Domain.Entities.User", "CreatedByUser")
                        .WithMany("ContactsManaged")
                        .HasForeignKey("CreatedByUserId");

                    b.Navigation("Company");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Deal", b =>
                {
                    b.HasOne("BonefireCRM.Domain.Entities.User", "AssignedToUser")
                        .WithMany("DealsAssigned")
                        .HasForeignKey("AssignedToUserId");

                    b.HasOne("BonefireCRM.Domain.Entities.Contact", "PrimaryContact")
                        .WithMany("Deals")
                        .HasForeignKey("PrimaryContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedToUser");

                    b.Navigation("PrimaryContact");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.FollowUpReminder", b =>
                {
                    b.HasOne("BonefireCRM.Domain.Entities.User", "AssignedToUser")
                        .WithMany("FollowUpRemindersAssigned")
                        .HasForeignKey("AssignedToUserId");

                    b.HasOne("BonefireCRM.Domain.Entities.Contact", "Contact")
                        .WithMany("FollowUpReminders")
                        .HasForeignKey("ContactId");

                    b.HasOne("BonefireCRM.Domain.Entities.User", "CreatedByUser")
                        .WithMany("FollowUpRemindersCreated")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BonefireCRM.Domain.Entities.Deal", "Deal")
                        .WithMany("FollowUpReminders")
                        .HasForeignKey("DealId");

                    b.Navigation("AssignedToUser");

                    b.Navigation("Contact");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Deal");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Interaction", b =>
                {
                    b.HasOne("BonefireCRM.Domain.Entities.Contact", "Contact")
                        .WithMany("Interactions")
                        .HasForeignKey("ContactId");

                    b.HasOne("BonefireCRM.Domain.Entities.Deal", "Deal")
                        .WithMany("Interactions")
                        .HasForeignKey("DealId");

                    b.HasOne("BonefireCRM.Domain.Entities.User", "LoggedByUser")
                        .WithMany("InteractionsLogged")
                        .HasForeignKey("LoggedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Deal");

                    b.Navigation("LoggedByUser");
                });

            modelBuilder.Entity("ContactDeal", b =>
                {
                    b.HasOne("BonefireCRM.Domain.Entities.Contact", null)
                        .WithMany()
                        .HasForeignKey("AssociatedContactsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BonefireCRM.Domain.Entities.Deal", null)
                        .WithMany()
                        .HasForeignKey("DealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ContactTag", b =>
                {
                    b.HasOne("BonefireCRM.Domain.Entities.Contact", null)
                        .WithMany()
                        .HasForeignKey("ContactsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BonefireCRM.Domain.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Company", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Contact", b =>
                {
                    b.Navigation("Deals");

                    b.Navigation("FollowUpReminders");

                    b.Navigation("Interactions");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.Deal", b =>
                {
                    b.Navigation("FollowUpReminders");

                    b.Navigation("Interactions");
                });

            modelBuilder.Entity("BonefireCRM.Domain.Entities.User", b =>
                {
                    b.Navigation("ContactsManaged");

                    b.Navigation("DealsAssigned");

                    b.Navigation("FollowUpRemindersAssigned");

                    b.Navigation("FollowUpRemindersCreated");

                    b.Navigation("InteractionsLogged");
                });
#pragma warning restore 612, 618
        }
    }
}
